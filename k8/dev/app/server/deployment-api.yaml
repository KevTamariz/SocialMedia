apiVersion: apps/v1
kind: Deployment
metadata:
  name: server-app
  labels:
    app: server-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: server-app
      tier: backend
  template:
    metadata:
      labels:
        app: server-app
        tier: backend
    spec:
      containers:
      - name: server-app
        image: kevtamariz/app1:api.v1.0.0
        ports:
        - containerPort: 8800
        env:
          - name: DB-USER
            valueFrom:
              secretKeyRef:
                name: db-user
                key: db-user
          - name: DB-PASS
            valueFrom:
              secretKeyRef:
                name: db-pass
                key: db-pass
      - name: cloud-sql-proxy
        # It is recommended to use the latest version of the Cloud SQL proxy
        # Make sure to update on a regular schedule!
        image: gcr.io/cloudsql-docker/gce-proxy:1.28.0 # make sure the use the latest version
        command:
          - "/cloud_sql_proxy"

          # If connecting from a VPC-native GKE cluster, you can use the
          # following flag to have the proxy connect over private IP
          # - "-ip_address_types=PRIVATE"

          # By default, the proxy will write all logs to stderr. In some
          # environments, anything printed to stderr is considered an error. To
          # disable this behavior and write all logs to stdout (except errors
          # which will still go to stderr), use:
          - "-log_debug_stdout"

          # Replace DB_PORT with the port the proxy should listen on
          # Defaults: MySQL: 3306, Postgres: 5432, SQLServer: 1433
          - "-instances=final-project1-370316:us-central1:app1-db-dev=tcp:3306"

          # This flag specifies where the service account key can be found
          - "-credential_file=/secrets/service_account.json"
        securityContext:
          # The default Cloud SQL proxy image runs as the
          # "nonroot" user and group (uid: 65532) by default.
          runAsNonRoot: true
        volumeMounts:
        - name: serv-account
          mountPath: /secrets/
          readOnly: true
        # Resource configuration depends on an application's requirements. You
        # should adjust the following values based on what your application
        # needs. For details, see https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
        resources:
          requests:
            # The proxy's memory use scales linearly with the number of active
            # connections. Fewer open connections will use less memory. Adjust
            # this value based on your application's requirements.
            memory: "2Gi"
            # The proxy's CPU use scales linearly with the amount of IO between
            # the database and the application. Adjust this value based on your
            # application's requirements.
            cpu:    "1"
      volumes:
      - name: serv-account
        secret:
          secretName: serv-account